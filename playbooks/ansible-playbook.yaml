- name: PlayBook 1 - Installation Nginx
  hosts: Nginx_Servers
  become: true
  vars_files:
    - ../group_vars/all.yml
  tasks:
    - name: Install Nginx Web Server
      apt:
        name: nginx
        state: latest
        update_cache: yes

    - name: Start and Enable Nginx Service
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Create Document Root for Virtual Host
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Copy NGINX index.html
      copy:
        src: "files/nginx-index.html"
        dest: "/var/www/{{ http_host }}/index.html"
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Deploy NGINX Virtual Host Configuration
      template:
        src: "files/nginx-template.conf"
        dest: "/etc/nginx/sites-available/{{ http_conf }}"

    - name: Enable Virtual Host
      file:
        src: "/etc/nginx/sites-available/{{ http_conf }}"
        dest: "/etc/nginx/sites-enabled/{{ http_conf }}"
        state: link
        force: yes

    - name: Remove Default Site (optional)
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Test NGINX Configuration
      command: nginx -t
      register: nginx_test
      ignore_errors: true

    - name: Fail if NGINX config test fails
      fail:
        msg: "NGINX config test failed."
      when: nginx_test.rc != 0

    - name: Reload NGINX
      service:
        name: nginx
        state: reloaded

# ---------------------- MYSQL PLAYBOOK ----------------------

- name: PlayBook 2 - MySQL Setup
  hosts: Database_Servers
  become: true
  vars_files:
    - ../group_vars/all.yml
  tasks:
    - name: Install MySQL and Dependencies
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - mysql-server
        - mysql-client
        - python3-pymysql   # switch to pymysql
        - libmysqlclient-dev

    - name: Start and Enable MySQL Service
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Set MySQL root password and switch auth plugin
      mysql_user:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: root
        host: localhost
        password: "{{ mysql_root_password }}"
        priv: "*.*:ALL,GRANT"
        state: present
        check_implicit_admin: yes

    - name: Create MySQL User
      mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: "{{ db_user }}"
        password: "{{ db_pass }}"
        priv: '*.*:ALL'
        host: '%'
        state: present

    - name: Create Database
      mysql_db:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: "{{ db_name }}"
        state: present

    - name: Enable Remote Login to MySQL
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: 'bind-address = 0.0.0.0'
        backup: yes
      notify:
        - Restart MySQL

  handlers:
    - name: Restart MySQL
      service:
        name: mysql
        state: restarted
     

# ---------------------- APACHE PLAYBOOK ----------------------

- name: PlayBook 3 - Apache Httpd Setup
  hosts: Apache_Servers
  become: true
  vars_files:
    - ../group_vars/all.yml
  tasks:
    - name: Install Apache Web Server
      apt:
        name: apache2
        state: latest
        update_cache: yes

    - name: Start and Enable Apache Service
      service:
        name: apache2
        state: started
        enabled: yes
      notify: Restart Apache

    - name: Create Document Root for Virtual Host
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Copy Index File
      template:
        src: "files/index-template.html"
        dest: "/var/www/html/index.html"

    - name: Set Up Virtual Host Configuration
      template:
        src: "files/apache-template.conf"
        dest: "/etc/apache2/sites-available/{{ http_conf }}"

    - name: Enable Site
      command: a2ensite {{ http_conf }}
      notify: Restart Apache

    - name: Allow HTTP Traffic on Port {{ http_port }}
      ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp

  handlers:
    - name: Restart Apache
      service:
        name: apache2
        state: restarted
